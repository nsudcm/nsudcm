:::::::::::::::::::::::::ДИСКЛЕЙМЕР:::::::::::::::::::::::::
Данный код не является вершиной качества, поэтому смело 
можете говорить, что это "говнокод и т.д и т.п", ибо был он
написан в короткие сроки и без имения каких-либо знаний
в области "Web-программирования" на момент старта.
Все технологии (ЯП, фреймворки и т.д) автор изучал с нуля и 
самостоятельно, но старался делать в рамках адекватного,
насколько позволяло время.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

А теперь кратко о программе:
Состоит из трех частей: frontend, backend, dicom-server.

1)Frontend (vue)
Используемые технологии можно посмотреть в package.json.
Уверен, там есть лишние вещи, поэтому ненужное можно смело удалять.

Компоненты:
—Employees: компонент для работы с сотрудниками (все очевидно)
—Home: "экран приветсвия" (ничего не придумал для него, потому он пустой)
—Research: ключевой компонент, в котором можно посмотреть имеющиеся на
	DICOM-сервере исследования, список наших исследователей. Также можно
	выбрать нужные нам исследования и назначить на них исследователя
—Samples: компонент, отображающий историю назначенных исследований (тоже все очевидно)
—Upload: компонент для загрузки файлов на DICOM-сервер с нужными нам тегами
	(тоже все очевидно)
	
2)Backend (node + express)
Используемые технологии также можно посмотреть в package.json и также, при наличии,
лишнее можно смело удалять.

Обыкновенная работа с БД и с DICOM-сервером.
Логика там простая, уверен разобраться не составит труда.

Для отправки писем использовался сервис Sendgrid (https://sendgrid.com/)
В качетсве БД использовалась MongoDB.

3)DICOM-сервер (orthanc)
https://www.orthanc-server.com/
REST API: https://book.orthanc-server.com/users/rest.html